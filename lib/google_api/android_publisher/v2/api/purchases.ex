# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AndroidPublisher.V2.Api.Purchases do
  @moduledoc """
  API calls for all endpoints tagged `Purchases`.
  """

  alias GoogleApi.AndroidPublisher.V2.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Checks the purchase and consumption status of an inapp item.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String.t): The package name of the application the inapp product was sold in (for example, &#39;com.some.thing&#39;).
  - product_id (String.t): The inapp product SKU (for example, &#39;com.some.thing.inapp1&#39;).
  - token (String.t): The token provided to the user&#39;s device when the inapp product was purchased.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.ProductPurchase{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_purchases_products_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AndroidPublisher.V2.Model.ProductPurchase.t()} | {:error, Tesla.Env.t()}
  def androidpublisher_purchases_products_get(
        connection,
        package_name,
        product_id,
        token,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/androidpublisher/v2/applications/{packageName}/purchases/products/{productId}/tokens/{token}",
        %{
          "packageName" => URI.encode_www_form(package_name),
          "productId" => URI.encode_www_form(product_id),
          "token" => URI.encode_www_form(token)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AndroidPublisher.V2.Model.ProductPurchase{}])
  end

  @doc """
  Cancels a user&#39;s subscription purchase. The subscription remains valid until its expiration time.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String.t): The package name of the application for which this subscription was purchased (for example, &#39;com.some.thing&#39;).
  - subscription_id (String.t): The purchased subscription ID (for example, &#39;monthly001&#39;).
  - token (String.t): The token provided to the user&#39;s device when the subscription was purchased.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_purchases_subscriptions_cancel(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, nil} | {:error, Tesla.Env.t()}
  def androidpublisher_purchases_subscriptions_cancel(
        connection,
        package_name,
        subscription_id,
        token,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel",
        %{
          "packageName" => URI.encode_www_form(package_name),
          "subscriptionId" => URI.encode_www_form(subscription_id),
          "token" => URI.encode_www_form(token)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Defers a user&#39;s subscription purchase until a specified future expiration time.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String.t): The package name of the application for which this subscription was purchased (for example, &#39;com.some.thing&#39;).
  - subscription_id (String.t): The purchased subscription ID (for example, &#39;monthly001&#39;).
  - token (String.t): The token provided to the user&#39;s device when the subscription was purchased.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (SubscriptionPurchasesDeferRequest): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.SubscriptionPurchasesDeferResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_purchases_subscriptions_defer(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AndroidPublisher.V2.Model.SubscriptionPurchasesDeferResponse.t()}
          | {:error, Tesla.Env.t()}
  def androidpublisher_purchases_subscriptions_defer(
        connection,
        package_name,
        subscription_id,
        token,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer",
        %{
          "packageName" => URI.encode_www_form(package_name),
          "subscriptionId" => URI.encode_www_form(subscription_id),
          "token" => URI.encode_www_form(token)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AndroidPublisher.V2.Model.SubscriptionPurchasesDeferResponse{}]
    )
  end

  @doc """
  Checks whether a user&#39;s subscription purchase is valid and returns its expiry time.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String.t): The package name of the application for which this subscription was purchased (for example, &#39;com.some.thing&#39;).
  - subscription_id (String.t): The purchased subscription ID (for example, &#39;monthly001&#39;).
  - token (String.t): The token provided to the user&#39;s device when the subscription was purchased.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.SubscriptionPurchase{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_purchases_subscriptions_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AndroidPublisher.V2.Model.SubscriptionPurchase.t()}
          | {:error, Tesla.Env.t()}
  def androidpublisher_purchases_subscriptions_get(
        connection,
        package_name,
        subscription_id,
        token,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}",
        %{
          "packageName" => URI.encode_www_form(package_name),
          "subscriptionId" => URI.encode_www_form(subscription_id),
          "token" => URI.encode_www_form(token)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AndroidPublisher.V2.Model.SubscriptionPurchase{}]
    )
  end

  @doc """
  Refunds a user&#39;s subscription purchase, but the subscription remains valid until its expiration time and it will continue to recur.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String.t): The package name of the application for which this subscription was purchased (for example, &#39;com.some.thing&#39;).
  - subscription_id (String.t): The purchased subscription ID (for example, &#39;monthly001&#39;).
  - token (String.t): The token provided to the user&#39;s device when the subscription was purchased.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_purchases_subscriptions_refund(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, nil} | {:error, Tesla.Env.t()}
  def androidpublisher_purchases_subscriptions_refund(
        connection,
        package_name,
        subscription_id,
        token,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund",
        %{
          "packageName" => URI.encode_www_form(package_name),
          "subscriptionId" => URI.encode_www_form(subscription_id),
          "token" => URI.encode_www_form(token)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Refunds and immediately revokes a user&#39;s subscription purchase. Access to the subscription will be terminated immediately and it will stop recurring.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String.t): The package name of the application for which this subscription was purchased (for example, &#39;com.some.thing&#39;).
  - subscription_id (String.t): The purchased subscription ID (for example, &#39;monthly001&#39;).
  - token (String.t): The token provided to the user&#39;s device when the subscription was purchased.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_purchases_subscriptions_revoke(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, nil} | {:error, Tesla.Env.t()}
  def androidpublisher_purchases_subscriptions_revoke(
        connection,
        package_name,
        subscription_id,
        token,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/androidpublisher/v2/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke",
        %{
          "packageName" => URI.encode_www_form(package_name),
          "subscriptionId" => URI.encode_www_form(subscription_id),
          "token" => URI.encode_www_form(token)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Lists the purchases that were canceled, refunded or charged-back.

  ## Parameters

  - connection (GoogleApi.AndroidPublisher.V2.Connection): Connection to server
  - package_name (String.t): The package name of the application for which voided purchases need to be returned (for example, &#39;com.some.thing&#39;).
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :endTime (String.t): The time, in milliseconds since the Epoch, of the newest voided in-app product purchase that you want to see in the response. The value of this parameter cannot be greater than the current time and is ignored if a pagination token is set. Default value is current time. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response.
    - :maxResults (integer()): 
    - :startIndex (integer()): 
    - :startTime (String.t): The time, in milliseconds since the Epoch, of the oldest voided in-app product purchase that you want to see in the response. The value of this parameter cannot be older than 30 days and is ignored if a pagination token is set. Default value is current time minus 30 days. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response.
    - :token (String.t): 

  ## Returns

  {:ok, %GoogleApi.AndroidPublisher.V2.Model.VoidedPurchasesListResponse{}} on success
  {:error, info} on failure
  """
  @spec androidpublisher_purchases_voidedpurchases_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AndroidPublisher.V2.Model.VoidedPurchasesListResponse.t()}
          | {:error, Tesla.Env.t()}
  def androidpublisher_purchases_voidedpurchases_list(
        connection,
        package_name,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :endTime => :query,
      :maxResults => :query,
      :startIndex => :query,
      :startTime => :query,
      :token => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/androidpublisher/v2/applications/{packageName}/purchases/voidedpurchases",
        %{
          "packageName" => URI.encode_www_form(package_name)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AndroidPublisher.V2.Model.VoidedPurchasesListResponse{}]
    )
  end
end
